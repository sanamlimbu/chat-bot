name: Build and deploy

on:
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2
  ECR_REPO: ${{ secrets.ECR_REPO }}
  AWS_ROLE_GITHUB_ACTIONS: ${{ secrets.aws_role_github_actions }}

jobs:
  build-and-push:
    name: Build Docker image and push to ECR
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_GITHUB_ACTIONS }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.ECR_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy AWS Lambda via Terraform Cloud
    runs-on: ubuntu-latest
    needs: build-and-push
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.11.3'
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform init
        id: init
        run: terraform init -input=false

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -input=false -var="image_tag=${{ github.sha }}"

      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve -input=false -var="image_tag=${{ github.sha }}"
